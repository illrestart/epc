#include "lte-tag.h"

NS_LOG_COMPONENT_DEFINE("lteEpcTag");

namespace ns3{

TypeId lteEpcTag::GetTypeId(void){
	static TypeId tid = TypeId("ns3::lteEpcTag")
		.SetParent<Tag>()
		.AddConstructor<lteEpcTag>()
		;
	return tid;
}

TypeId lteEpcTag::GetInstanceTypeId(void) const{
	return GetTypeId();
}

uint32_t lteEpcTag::GetSerializedSize(void) const{
	return 12;
}
void lteEpcTag::Serialize(TagBuffer i) const{
	i.WriteU8(m_status);
/*	i.WriteU8(m_Session);
	i.WriteU8(m_Handover);

	i.WriteU8(m_SessionServiceRequest);
	i.WriteU8(m_SessionAuthentication);
	i.WriteU8(m_SessionInitialContextSetupRequest);
	i.WriteU8(m_SessionRadioBearerEstablishment);
	i.WriteU8(m_SessionUplinkData);
	i.WriteU8(m_SessionInitialContextSetupComplete);
	i.WriteU8(m_SessionModifyBearerRequest);
	i.WriteU8(m_SessionModifyBearerRespone);
	i.WriteU8(m_SessionPCEFInitialedIPCAN);
	i.WriteU8(m_SessionModifyBearerResponse);
*/

/*	i.WriteU8(m_HandoverPathSwitchRequest);
	i.WriteU8(m_HandoverModifyBearerRequest);
	i.WriteU8(m_HandoverModifyBearerRequestToUgw);
	i.WriteU8(m_HandoverModifyBearerResponseToUgw);
	i.WriteU8(m_HandoverModifyBearerResponse);
	i.WriteU8(m_HandoverEndMarkerToSourceEnb);
	i.WriteU8(m_HandoverEndMarkerToTargetEnb);
	i.WriteU8(m_HandoverPathSwitchRequestAck);
	i.WriteU8(m_HandoverReleaseResource);
	*/
}

void lteEpcTag::Deserialize(TagBuffer i){
	m_status = i.ReadU8();
/*
	m_Session = i.ReadU8();
	m_Handover= i.ReadU8();

	m_SessionServiceRequest= i.ReadU8();
	m_SessionAuthentication= i.ReadU8();
	m_SessionInitialContextSetupRequest= i.ReadU8();
	m_SessionRadioBearerEstablishment= i.ReadU8();
	m_SessionUplinkData= i.ReadU8();
	m_SessionInitialContextSetupComplete= i.ReadU8();
	m_SessionModifyBearerRequest= i.ReadU8();
   	m_SessionModifyBearerRespone= i.ReadU8();
   	m_SessionPCEFInitialedIPCAN= i.ReadU8();
   	m_SessionModifyBearerResponse= i.ReadU8();
*/

/*   	m_HandoverPathSwitchRequest= i.ReadU8();
   	m_HandoverModifyBearerRequest= i.ReadU8();
   	m_HandoverModifyBearerRequestToUgw= i.ReadU8();
   	m_HandoverModifyBearerResponseToUgw= i.ReadU8();
   	m_HandoverModifyBearerResponse= i.ReadU8();
   	m_HandoverEndMarkerToSourceEnb= i.ReadU8();
   	m_HandoverEndMarkerToTargetEnb= i.ReadU8();
   	m_HandoverPathSwitchRequestAck= i.ReadU8();
   	m_HandoverReleaseResource= i.ReadU8();
	*/
}

//void lteEpcTag::Print(std::ostream &os){}

lteEpcTag::lteEpcTag(){
	NS_LOG_INFO(this);
/*
*the flag of session or handover
*/
	m_status = (uint8_t)m_Empty;
	
	m_Session = 0;
	m_Handover = 0;

/*
*session and handover
*/
	m_SessionServiceRequest = 0;
	m_SessionAuthentication = 0;
	m_SessionInitialContextSetupRequest = 0;
	m_SessionRadioBearerEstablishment = 0;
	m_SessionUplinkData = 0;
	m_SessionInitialContextSetupComplete = 0;
	m_SessionModifyBearerRequest = 0;
	m_SessionModifyBearerRespone = 0;
	m_SessionPCEFInitialedIPCAN = 0;
	m_SessionModifyBearerResponse = 0;

	m_HandoverPathSwitchRequest = 0;
	m_HandoverModifyBearerRequest = 0;
	m_HandoverModifyBearerRequestToUgw = 0;
	m_HandoverModifyBearerResponseToUgw = 0;
	m_HandoverModifyBearerResponse = 0;
	m_HandoverEndMarkerToSourceEnb = 0;
	m_HandoverEndMarkerToTargetEnb = 0;
	m_HandoverPathSwitchRequestAck = 0;
	m_HandoverReleaseResource = 0;

//	m_paraNum = 21;
}

lteEpcTag::~lteEpcTag(){
	NS_LOG_INFO(this);
}
/*
*the flag of session or handover
*/
void lteEpcTag::setM_Session() {
		m_Session = 1;
}
uint8_t lteEpcTag::getM_Session() {
	return m_Session;
}

void lteEpcTag::setM_Handover() {
		m_Handover = 1;
}
uint8_t lteEpcTag::getM_Handover() {
	return m_Handover;
}



/*
*session and handover set and get
*/

void lteEpcTag::setM_SessionServiceRequest() {
		m_SessionServiceRequest = 1;
}
uint8_t lteEpcTag::getM_SessionServiceRequest() {
	return m_SessionServiceRequest;
}
uint8_t lteEpcTag::getM_SessionAuthentication() {
	return m_SessionAuthentication;
}
void lteEpcTag::setM_SessionAuthentication() {
	m_SessionAuthentication = 1;
}
uint8_t lteEpcTag::getM_SessionInitialContextSetupRequest() {
	return m_SessionInitialContextSetupRequest;
}
void lteEpcTag::setM_SessionInitialContextSetupRequest() {
	m_SessionInitialContextSetupRequest = 1;
}
uint8_t lteEpcTag::getM_SessionRadioBearerEstablishment() {
	return m_SessionRadioBearerEstablishment;
}
void lteEpcTag::setM_SessionRadioBearerEstablishment() {
	m_SessionRadioBearerEstablishment = 1;
}
uint8_t lteEpcTag::getM_SessionUplinkData() {
	return m_SessionUplinkData;
}
void lteEpcTag::setM_SessionUplinkData() {
	m_SessionUplinkData = 1;
}
uint8_t lteEpcTag::getM_SessionInitialContextSetupComplete() {
	return m_SessionInitialContextSetupComplete;
}
void lteEpcTag::setM_SessionInitialContextSetupComplete() {
	m_SessionInitialContextSetupComplete = 1;
}
uint8_t lteEpcTag::getM_SessionModifyBearerRequest() {
	return m_SessionModifyBearerRequest;
}
void lteEpcTag::setM_SessionModifyBearerRequest() {
	m_SessionModifyBearerRequest = 1;
}
uint8_t lteEpcTag::getM_SessionModifyBearerRespone() {
	return m_SessionModifyBearerRespone;
}
void lteEpcTag::setM_SessionModifyBearerRespone() {
	m_SessionModifyBearerRespone = 1;
}
uint8_t lteEpcTag::getM_SessionPCEFInitialedIPCAN() {
	return m_SessionPCEFInitialedIPCAN;
}
void lteEpcTag::setM_SessionPCEFInitialedIPCAN() {
	m_SessionPCEFInitialedIPCAN = 1;
}
uint8_t lteEpcTag::getM_SessionModifyBearerResponse() {
	return m_SessionModifyBearerResponse;
}
void lteEpcTag::setM_SessionModifyBearerResponse() {
	m_SessionModifyBearerResponse = 1;
}
uint8_t lteEpcTag::getM_HandoverPathSwitchRequest() {
	return m_HandoverPathSwitchRequest;
}
void lteEpcTag::setM_HandoverPathSwitchRequest() {
	m_HandoverPathSwitchRequest = 1;
}
uint8_t lteEpcTag::getM_HandoverModifyBearerRequest() {
	return m_HandoverModifyBearerRequest;
}
void lteEpcTag::setM_HandoverModifyBearerRequest() {
	m_HandoverModifyBearerRequest = 1;
}
uint8_t lteEpcTag::getM_HandoverModifyBearerRequestToUgw() {
	return m_HandoverModifyBearerRequestToUgw;
}
void lteEpcTag::setM_HandoverModifyBearerRequestToUgw() {
	m_HandoverModifyBearerRequestToUgw = 1;
}
uint8_t lteEpcTag::getM_HandoverModifyBearerResponseToUgw() {
	return m_HandoverModifyBearerResponseToUgw;
}
void lteEpcTag::setM_HandoverModifyBearerResponseToUgw() {
	m_HandoverModifyBearerResponseToUgw = 1;
}
uint8_t lteEpcTag::getM_HandoverModifyBearerResponse() {
	return m_HandoverModifyBearerResponse;
}
void lteEpcTag::setM_HandoverModifyBearerResponse() {
	m_HandoverModifyBearerResponse = 1;
}
uint8_t lteEpcTag::getM_HandoverEndMarkerToSourceEnb() {
	return m_HandoverEndMarkerToSourceEnb;
}
void lteEpcTag::setM_HandoverEndMarkerToSourceEnb() {
	m_HandoverEndMarkerToSourceEnb = 1;
}
uint8_t lteEpcTag::getM_HandoverEndMarkerToTargetEnb() {
	return m_HandoverEndMarkerToTargetEnb;
}
void lteEpcTag::setM_HandoverEndMarkerToTargetEnb() {
	m_HandoverEndMarkerToTargetEnb = 1;
}
uint8_t lteEpcTag::getM_HandoverPathSwitchRequestAck() {
	return m_HandoverPathSwitchRequestAck;
}
void lteEpcTag::setM_HandoverPathSwitchRequestAck() {
	m_HandoverPathSwitchRequestAck = 1;
}
uint8_t lteEpcTag::getM_HandoverReleaseResource() {
	return m_HandoverReleaseResource;
}
void lteEpcTag::setM_HandoverReleaseResource() {
	m_HandoverReleaseResource = 1;
}


}
